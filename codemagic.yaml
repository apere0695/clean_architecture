workflows:
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      groups:
        - firebase # Grupo para FIREBASE_APP_ID y FIREBASE_SERVICE_ACCOUNT
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - name: Clean and Get Dependencies
        script: |
          flutter clean
          flutter pub get
      - name: Build APK with Auto-incremented Version
        script: |
          VERSION_NAME=$(grep 'version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          flutter build apk --release \
            --build-name=$VERSION_NAME+$PROJECT_BUILD_NUMBER \
            --build-number=$PROJECT_BUILD_NUMBER
      - name: Install Firebase CLI
        script: |
          if ! command -v firebase &> /dev/null; then
            npm install -g firebase-tools
          else
            echo "Firebase CLI already installed, skipping installation"
          fi
      - name: Set up Firebase Service Account
        script: |
          # Crear un archivo JSON con las credenciales de la cuenta de servicio
          echo "$FIREBASE_SERVICE_ACCOUNT" > "$CM_BUILD_DIR/firebase_credentials.json"
          # Verificar que GOOGLE_APPLICATION_CREDENTIALS est√© configurado
          echo "GOOGLE_APPLICATION_CREDENTIALS is set to: $GOOGLE_APPLICATION_CREDENTIALS"
      - name: Distribute APK to Firebase
        script: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app $FIREBASE_APP_ID \
            --groups "testers"
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
    publishing:
      email:
        recipients:
          - aalan_666@yahoo.com
        notify:
          success: true
          failure: true