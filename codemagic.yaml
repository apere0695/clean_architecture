workflows:
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      groups:
        - firebase
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - name: Clean and Get Dependencies
        script: |
          flutter clean
          flutter pub get

      - name: Increment Version Code (In-Memory Only)
        script: |
          # Extraer versionName y versionCode del pubspec.yaml
          VERSION_LINE=$(grep 'version:' pubspec.yaml)
          VERSION_NAME=$(echo $VERSION_LINE | awk '{print $2}' | cut -d'+' -f1)
          VERSION_CODE=$(echo $VERSION_LINE | awk '{print $2}' | cut -d'+' -f2)

          # Incrementar versionCode
          NEW_VERSION_CODE=$((VERSION_CODE + 1))

          # Mostrar nueva versiÃ³n
          echo "Building with version: $VERSION_NAME+$NEW_VERSION_CODE"

          # Exportar como variables de entorno
          echo "VERSION_NAME=$VERSION_NAME" >> $CM_ENV
          echo "VERSION_CODE=$NEW_VERSION_CODE" >> $CM_ENV

      - name: Build APK with Updated Version
        script: |
          flutter build apk --release \
            --build-name=$VERSION_NAME+$VERSION_CODE \
            --build-number=$VERSION_CODE

      - name: Install Firebase CLI
        script: |
          if ! command -v firebase &> /dev/null; then
            npm install -g firebase-tools
          else
            echo "Firebase CLI already installed, skipping installation"
          fi

      - name: Distribute APK to Firebase
        script: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app $FIREBASE_APP_ID \
            --token $FIREBASE_TOKEN \
            --groups "testers"

    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk

    publishing:
      email:
        recipients:
          - aalan_666@yahoo.com
        notify:
          success: true
          failure: true
